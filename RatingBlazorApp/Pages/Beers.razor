@page "/beers"

@using DAL.Recordsets
@using DAL.Models
@using Components;

@inject IBeerRec _db
@inject IJSRuntime JSRuntime

<h1>Bières</h1>
<br />

<h3><b>Ajout d'une bière</b></h3>
<hr />

<EditForm Model="@newBeer" OnValidSubmit="@InsertBeer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <InputText type="text" id="name-focus-id" class="form-control" @bind-Value="@newBeer.Name" placeholder="Nom" />
    </div>

    <div class="form-group">
        <InputText id="desc" class="form-control" @bind-Value="@newBeer.Description" placeholder="Description"></InputText>
    </div>

    <div class="form-row">
        <div class="form-group col-md-4">
            <InputSelect id="color" class="form-control" @bind-Value="@newBeer.Color">
                <option value="">Couleur</option>
                @foreach (string color in Colors)
                {
                    <option value="@color">@color</option>
                }
            </InputSelect>
        </div>

        <div class="form-group col-md-4">
            <InputSelect id="style" class="form-control" @bind-Value="@newBeer.Style">
                <option value="">Style</option>
                @foreach (string style in Styles)
                {
                    <option value="@style">@style</option>
                }
            </InputSelect>
        </div>

        <div class="form-group col-md-2">
            <InputText id="abv" class="form-control" @bind-Value="@newBeer.Abv" placeholder="TEA"></InputText>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

<br />
<br />
<br />


@if (BeerList is null)
{
<div class="d-flex align-items-center">
    <strong>Chargement des binouzes ...</strong>
    <div class="spinner-border ml-3" role="status" aria-hidden="true"></div>
</div>
}
else
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th scope="col"></th>
                <th scope="col">Nom</th>
                <th scope="col">Couleur</th>
                <th scope="col">Style</th>
                <th scope="col">TEA</th>
            </tr>
        </thead>
        <tbody>
            @foreach (BeerModel beer in BeerList)
            {
                <tr>
                    <th scope="row">
                        <a class="oi oi-x" href="" @onclick="@(() => DeleteBeer(beer.IdBee))" @onclick:preventDefault data-toggle="tooltip" title="Supprimer"></a>
                    </th>
                    <td>@beer.Name</td>
                    <td>@beer.Color</td>
                    <td>@beer.Style</td>
                    <td>@beer.Abv</td>
                </tr>
            }
        </tbody>
    </table>
}
<ConfirmModal ConfirmationChanged="ConfirmDelete" @ref="DeleteConfirmation"
              Message="@(SelectedBeer != null ? $"Etes vous sûr de vouloir supprimer \"{SelectedBeer.Name}\"?" : String.Empty)">
</ConfirmModal>



@code {
    private List<BeerModel> BeerList { get; set; }
    private OPBeer newBeer = new OPBeer();

    private string[] Colors => new[] { "BLANCHE", "BLONDE", "AMBREE", "BRUNE" };
    private string[] Styles => new[] { "ABBAYE","BLANCHE","LAGER","PALE ALE","IPA","TRIPLE","STOUT","SAISON","SOUR","FUT"};

    private ConfirmModal DeleteConfirmation { get; set; }

    private BeerModel SelectedBeer;

    protected override async Task OnInitializedAsync()
    {
        BeerList = await _db.SelectAll();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setFocusOnElement", "name-focus-id");
        }
    }

    private async Task InsertBeer()
    {
        BeerModel beer = new BeerModel()
        {
            Name = newBeer.Name,
            Description = newBeer.Description,
            Color = newBeer.Color,
            Style = newBeer.Style,
            Abv = decimal.Parse(newBeer.Abv)
        };

        //await _db.InsertBeer(beer);

        //A retravailler, l'affectation de l'id ne devrait pas se faire içi
        beer.IdBee = await _db.InsertBeer(beer);

        BeerList.Add(beer);

        newBeer = new OPBeer();

        // ne fonctionne pas pour le moment malgré le passage dans le js
        await JSRuntime.InvokeVoidAsync("setFocusOnElement", "name-focus-id");
    }

    private void DeleteBeer(int idBee)
    {
        SelectedBeer = BeerList.FirstOrDefault(b => b.IdBee == idBee);

        if (SelectedBeer != null)
        {
            DeleteConfirmation.Show();
        }
    }

    private async Task ConfirmDelete(bool deleteConfirmed)
    {
        if (deleteConfirmed && SelectedBeer != null)
        {
            await _db.DeleteBeer(SelectedBeer.IdBee);
            BeerList.Remove(SelectedBeer);

            SelectedBeer = null;
        }
    }
}
